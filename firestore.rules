rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check the 'role' field in the user's own document
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // ====================================================
    // User Profiles
    // ====================================================
    match /users/{userId} {
      // Users can read their own profile. Admins can read any profile.
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can create their own profile during signup.
      // The `handleRegisterUser` action ensures the doc id matches the auth uid.
      allow create: if isOwner(userId);
      
      // Users can update their own profile, but cannot change their role or clientId.
      allow update: if isOwner(userId) 
                    && request.resource.data.role == resource.data.role
                    && request.resource.data.clientId == resource.data.clientId;
    }

    // ====================================================
    // Admin & Public Collections
    // ====================================================
    match /brokers/{brokerId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /blogPosts/{postId} {
      // Anyone can read published posts. Admins can do anything.
      allow read: if resource.data.status == 'published' || isAdmin();
      allow write: if isAdmin();
    }
    
    match /productCategories/{catId} {
       allow read: if isAuthenticated();
       allow write: if isAdmin();
    }
    
    match /products/{prodId} {
       allow read: if isAuthenticated();
       allow write: if isAdmin();
    }

    match /paymentMethods/{methodId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /clientLevels/{levelId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    match /feedbackForms/{formId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }

    // ====================================================
    // User-Specific Data
    // ====================================================
    match /tradingAccounts/{accountId} {
      // User can create their own account. Read/Update/Delete is based on ownership.
      allow create, read, update, delete: if isOwner(request.resource.data.userId) || isAdmin();
      // Allow admin to read/update any account
      allow read, update: if isAdmin();
    }
    
    match /cashbackTransactions/{txId} {
      // Only admin can create transactions. User can only read their own.
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    match /withdrawals/{withdrawalId} {
      // User can create their own request. User can read their own.
      allow create: if isOwner(request.resource.data.userId);
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Only admin can update/delete
      allow update, delete: if isAdmin();
    }

    match /orders/{orderId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow update(writeFields: ['isRead']): if isOwner(resource.data.userId);
        allow create, delete: if isAdmin(); // Only admin can create notifications
    }
    
    match /feedbackResponses/{responseId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow write: if isAdmin();
    }
    
    // ====================================================
    // System & Logging Collections
    // ====================================================
    match /counters/{counterId} {
      // Only backend logic should touch counters. Restrict to admins for safety.
      allow read, write: if isAdmin();
    }
    
     match /activityLogs/{logId} {
      // Only backend should create logs. Only admins can read them.
      allow read: if isAdmin();
      allow create: if isAuthenticated(); // Allow creation from server actions for logged-in users.
    }
    
    match /adminNotifications/{notificationId} {
        // Only admins can read/write their own notification history
        allow read, write: if isAdmin();
    }
  }
}