rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the requesting user's document has the 'admin' role.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Collection Rules ---

    // USERS: Users can read any profile (for referral names, etc.), but only write to their own. Admins can write to any.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdmin();
      allow create: if true; // Allows the registration server action to create a new user doc.
    }

    // COUNTERS: No client-side access. Must be updated via server-side transactions.
    match /counters/{counterId} {
        allow read, write: if false;
    }
    
    // PUBLIC COLLECTIONS: Anyone can read these. Only admins can write.
    match /(brokers|blogPosts|productCategories|products|paymentMethods|pointsRules)/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // USER-OWNED COLLECTIONS: Users can create their own documents and read/update/delete ONLY their own.
    match /(tradingAccounts|withdrawals|notifications|orders|feedbackResponses)/{docId} {
      // Allow create if the new document's userId matches the requester's ID.
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Allow read, update, delete only if the existing document's userId matches the requester's ID.
      allow read, update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // ADMIN-ONLY COLLECTIONS: Full access for admins only.
    match /(activityLogs|adminNotifications|feedbackForms)/{docId} {
        allow read, write: if isAdmin();
    }
    
    // SETTINGS: Certain settings can be read by authenticated users (e.g. banner), but only written by admins.
    match /settings/{settingId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }

    // --- Default Deny ---
    // Catch-all rule to deny any access not explicitly granted above.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
